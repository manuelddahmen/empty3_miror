plugins {
    id("application") // enabling the plugin here
    id("java")
    id 'java-library'
    id 'maven-publish'
}
// Other configuration here

java {
    withSourcesJar()
}


repositories {
    google()
    mavenCentral()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
    maven {
        url = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
    }
    maven {
        url = uri("https://repository.sonatype.org/content/groups/public/")
    }
    maven {
        url = uri("https://mvnrepository.com/")
    }
    maven {
        url = uri("https://maven.scijava.org/content/repositories/public/")
    }
}

dependencies {
    implementation('com.android.tools.build:gradle:7.0.0-beta01')
    implementation("org.jcodec:jcodec-javase:0.2.5")
    implementation("org.jogamp.jogl:jogl-all-main:2.3.2")
    implementation("com.miglayout:miglayout:3.7.4")
    implementation("com.badlogicgames.gdx:gdx:1.10.0")
    implementation("xom:xom:1.3.7")
    implementation("com.jgoodies:jgoodies-common:1.8.1")
    implementation("com.google.android:android:4.1.1.4")
    implementation("com.formdev:flatlaf:2.1")
    implementation("org.jdesktop:beansbinding:1.2.1")
    implementation("junit:junit:4.13.2")
    implementation("junit:junit:4.13.2")
    implementation("com.github.sarxos:webcam-capture:0.3.12")
    implementation("org.jogamp.gluegen:gluegen-rt-main:2.3.2")
    implementation("commons-net:commons-net:3.5")
    implementation("org.jdom:jdom2:2.0.6.1")
    implementation("org.apache.servicemix.bundles:org.apache.servicemix.bundles.jdom:2.0.6.1_1")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

tasks.getByName("test") {
    useJUnitPlatform()
}

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}


task copyTask(type: Copy) {
    from 'src/main/java/'
    into 'build/classes/java/main'
}
javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'one.empty3'
            artifactId = 'libraries-k'
            version = "1.1"
            from components.java

            pom {
                name = 'My Empty3 Graphics Library'
                description = 'Graphics, image processing '

            }
        }
    }
//In the publishing section, in repositories, specify the repository URL and credentials using the environment variables:

    repositories {
        maven {
            credentials {
                // Automation has a special account for authentication in Space
                // account credentials are accessible via env vars
                username = System.getenv("JB_SPACE_CLIENT_ID")
                password = System.getenv("JB_SPACE_CLIENT_SECRET")
            }

            url = "https://maven.pkg.jetbrains.space/empty3/p/empty3/maven/maven"
        }
    }
}
